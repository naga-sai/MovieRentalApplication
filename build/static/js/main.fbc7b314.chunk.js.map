{"version":3,"sources":["components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/common/pagination.jsx","services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/listGroup.jsx","services/authService.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/searchBox.jsx","components/movies.jsx","utils/paginate.js","components/navbar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","components/logout.jsx","services/userService.js","components/registerForm.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["Customers","react_default","a","createElement","Rentals","NotFound","Pagination","_ref","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","_","range","className","map","page","key","onClick","logService","init","log","error","console","axios","defaults","baseURL","process","REACT_APP_API_URL","interceptors","response","use","status","logger","toast","Promise","reject","httpService","get","post","put","delete","setJwt","jwt","headers","common","apiEndPoint","movieUrl","id","concat","getMovie","movieId","http","saveMovie","movie","_id","body","Object","objectSpread","getGenres","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","item","defaultProps","tokenKey","_callee","email","password","regenerator_default","wrap","_context","prev","next","sent","data","localStorage","setItem","stop","this","getJwt","getItem","authService","login","_x","_x2","_login","apply","arguments","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","Like","props","classes","liked","aria-hidden","style","cursor","TableHeader","raiseSort","path","sortColumn","_this","order","onSort","renderSortIcon","column","_this2","columns","label","Component","TableBody","renderCell","content","createKey","_this$props","Table","tableHeader","tableBody","MoviesTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Link","to","title","like","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","Fragment","table","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleLike","toConsumableArray","index","indexOf","setState","handlePageChange","handleDelete","originalMovies","filter","m","t0","handleGenreSelect","genre","handleSort","handleSearch","query","getPagedData","_this$state","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","_this$state2","_this$getPagedData","listGroup","marginBottom","searchBox","moviesTable","pagination","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Input","rest","objectWithoutProperties","htmlFor","assign","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","message","err","return","validateProperty","obj","defineProperty","handleSubmit","preventDefault","doSubmit","handleChange","_ref2","input","errorMessage","disabled","common_input","common_select","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","_context3","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","location","window","from","pathname","Redirect","Logout","RegisterForm","minDomainAtoms","users","ProtectedRoute","component","render","Route","App","lib","navbar","Switch","protectedRoute","components_movies","exact","Boolean","hostname","REACT_APP_NAME","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fbc7b314.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Customers = () => {\r\n    return ( <h1>Customers</h1> );\r\n}\r\n \r\nexport default Customers;","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n  //console.log(pagesCount);\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a onClick={() => onPageChange(page)} className=\"page-link\">\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  currentPage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","function init() {}\r\n\r\nfunction log(error) {\r\n  console.error(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log\r\n};\r\n","import axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast(\"An unexpected error occured.\");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"/movies\";\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndPoint);\r\n}\r\n\r\nexport function movieUrl(id) {\r\n  return `${apiEndPoint}/${id}`;\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n\r\n  return http.post(apiEndPoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(movieUrl(movieId));\r\n}\r\n","import http from \"./httpService\";\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  textProperty,\r\n  valueProperty,\r\n  onItemSelect,\r\n  selectedItem\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map(item => (\r\n        <li\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\"\r\n};\r\nexport default ListGroup;\r\n","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst apiEndPoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndPoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt\r\n};\r\n","import React from \"react\";\r\n\r\nconst Like = props => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!props.liked) classes += \"-o\";\r\n  return (\r\n    <i\r\n      className={classes}\r\n      aria-hidden=\"true\"\r\n      style={{ cursor: \"pointer\" }}\r\n      onClick={props.onClick}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map(column => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label}\r\n              {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { columns, data } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody data={data} columns={columns} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"Like\",\r\n      content: movie => (\r\n        <Like onClick={() => this.props.onLike(movie)} liked={movie.liked} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: movie => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-small\"\r\n      >\r\n        Delete\r\n      </button>\r\n    )\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) {\r\n      this.columns.push(this.deleteColumn);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn, user } = this.props;\r\n    console.log(\"user: \", user);\r\n    return (\r\n      <React.Fragment>\r\n        <Table\r\n          columns={this.columns}\r\n          data={movies}\r\n          onSort={onSort}\r\n          sortColumn={sortColumn}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      className=\"form-control my-3\"\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport _ from \"lodash\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleDelete = async movie => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies });\r\n\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"This movie has already been deleted.\");\r\n\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handleGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      searchQuery,\r\n      movies: allMovies,\r\n      selectedGenre\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n\r\n    if (searchQuery)\r\n      filtered = allMovies.filter(m =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n    const { user } = this.props;\r\n\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            onItemSelect={this.handleGenreSelect}\r\n            selectedItem={this.state.selectedGenre}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && (\r\n            <Link\r\n              to=\"/movies/new\"\r\n              className=\"btn btn-primary\"\r\n              style={{ marginBottom: 20 }}\r\n            >\r\n              New Movie\r\n            </Link>\r\n          )}\r\n          <p>Showing {totalCount} movies from the database.</p>\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <MoviesTable\r\n            movies={movies}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n            sortColumn={sortColumn}\r\n          />\r\n          <Pagination\r\n            pageSize={pageSize}\r\n            onPageChange={this.handlePageChange}\r\n            currentPage={currentPage}\r\n            itemsCount={totalCount}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidlee\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item \">\r\n            <NavLink className=\"nav-link\" to=\"/movies\">\r\n              Movies\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/customers\">\r\n              Customers\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/rentals\">\r\n              Rentals\r\n            </NavLink>\r\n          </li>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/login\">\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/register\">\r\n                  Register\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/\">\r\n                  {user.name}\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/logout\">\r\n                  Logout\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, value, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        {...rest}\r\n        value={value}\r\n        name={name}\r\n        id={name}\r\n        className=\"form-control\"\r\n      />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = { data: {}, errors: {} };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n\r\n    if (!error) return null;\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n\r\n    if (errors) return;\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        value={data[name]}\r\n        name={name}\r\n        onChange={this.handleChange}\r\n        label={label}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\"\r\n    },\r\n    genres: [],\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string()\r\n      .required()\r\n      .label(\"Title\"),\r\n    genreId: Joi.string()\r\n      .required()\r\n      .label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .min(0)\r\n      .max(100)\r\n      .required()\r\n      .label(\"Number In Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .min(1)\r\n      .max(10)\r\n      .required()\r\n      .label(\"Daily Rental Rate\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number In Stock\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Daily Rental Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\"\r\n    },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await auth.login(data.username, data.password);\r\n\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div>\r\n        <h1>LoginForm</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"/users\";\r\n\r\nexport function register(users) {\r\n  return http.post(apiEndPoint, {\r\n    email: users.username,\r\n    password: users.password,\r\n    name: users.name\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport * as userService from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n      name: \"\"\r\n    },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .email({ minDomainAtoms: 2 })\r\n\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .min(5)\r\n      .required()\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .required()\r\n      .label(\"name\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/login\", state: { from: props.location } }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport Movies from \"./components/movies\";\nimport NavBar from \"./components/navbar\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport Logout from \"./components/logout\";\nimport RegisterForm from \"./components/registerForm\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nconsole.log(\"SUPERMAN\", process.env.REACT_APP_NAME);\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}